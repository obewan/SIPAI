name: Coverage and Doxygen

on:
  pull_request:
    branches: [main]

jobs:
  build:
    name: Build
    defaults:
      run:
        working-directory: sipai-github-actions-docker

    runs-on: ubuntu-latest
    container:
      image: ghcr.io/obewan/sipai-env

    permissions:
      contents: write
      pages: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure CMake
        run: cmake -B build -DCMAKE_BUILD_TYPE=Debug
        env:
          CXX: g++-12
        working-directory: ${{github.workspace}}

      - name: Build
        run: cmake --build build --config Debug -- -j 2
        working-directory: ${{github.workspace}}

      - name: Run unit tests
        run: ./tester
        working-directory: ${{github.workspace}}/build/test/doctests

      - name: Run code coverage
        run: |
          mkdir -p coverage
          mkdir -p coverage/html
          lcov --gcov-tool /usr/bin/gcov-12 --directory . --capture --output-file coverage/lcov.info
          lcov --gcov-tool /usr/bin/gcov-12 --remove coverage/lcov.info --output-file coverage/lcov.info \
          '/usr/include/*' '/usr/lib/*' \
          '*libs/libcsvparser/*' \
          '*libs/libjson/*' \
          '*libs/libsipai/**Vulkan*' \
          '*/test/*'
          lcov --gcov-tool /usr/bin/gcov-12 --summary coverage/lcov.info
          genhtml coverage/lcov.info --output-directory coverage/html
        working-directory: ${{github.workspace}}

      - name: Create JSON file for badge
        run: |
          coverage=$(lcov --gcov-tool /usr/bin/gcov-12 --summary coverage/lcov.info 2>&1 | grep 'lines......:' | awk -F ' ' '{print $2}' | sed 's/%//')
          echo -e "{\"coverage\": \"$coverage\"}" > coverage/coverage.json
        working-directory: ${{github.workspace}}

      - name: Generate Documentation
        run: |
          doxygen Doxyfile
        working-directory: ${{github.workspace}}/doc

      - name: Prepare files for deployment
        run: |
          mkdir deploy
          cp -r coverage deploy/coverage
          cp -r doc/html deploy/api
        working-directory: ${{github.workspace}}

      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: deploy
          destination_dir: .
